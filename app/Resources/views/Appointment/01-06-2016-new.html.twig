{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css">
{% endblock %}

{% block pageTitle %}
    <div class="row">
        <div class="col-md-12"><h2>Appointments</h2></div>
    </div>
    <hr />
{% endblock %}

{# personalizamos como se mostrará cada schedule #}
{% form_theme form _self %}

{% block _appbundle_appointment_schedules_entry_row %}
{% spaceless %}
    <div class="col-md-12 well schedule">
        <div class="row">
            <button type="button" class="close">&times;</button>
        </div>
        <div class="row">
            {{ form_label(form.scheduleDate) }}
            {{ form_widget(form.scheduleDate, { 'attr': {'value' : "now"|date("Y-m-d") }} ) }}
            {{ form_errors(form.scheduleDate) }}

            {{ form_label(form.startingHour) }}
            {{ form_widget(form.startingHour) }}
            {{ form_errors(form.startingHour) }}

            {{ form_label(form.finishHour) }}
            {{ form_widget(form.finishHour) }}
            {{ form_errors(form.finishHour) }}

            {{ form_label(form.services) }}
            {{ form_widget(form.services) }} {# campo autocomplete#}
            {{ form_errors(form.service) }}
            {{ form_widget(form.service) }} {# campo oculto que se rellena con el autocomplete#}

            {{ form_label(form.staffs) }}
            {{ form_widget(form.staffs) }} {# campo autocomplete#}
            {{ form_errors(form.staff) }}
            {{ form_widget(form.staff) }} {# campo oculto que se rellena con el autocomplete#}

            {{ form_label(form.rooms) }}
            {{ form_widget(form.rooms) }} {# campo autocomplete#}
            {{ form_errors(form.room) }}
            {{ form_widget(form.room) }} {# campo oculto que se rellena con el autocomplete#}

            {{ form_label(form.discount) }}
            {{ form_widget(form.discount) }}
            {{ form_errors(form.discount) }}
            
        </div>
    </div>
{% endspaceless %}
{% endblock %}


{% block main %}
	<div class="row">
        <div class="col-md-12">
            <!-- Advanced Tables -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    New Appointment
                </div>
                <div class="panel-body">
                    <div class="col-md-12">
                    	<form action="{{ path('appointment_new') }}" method="post" {{ form_enctype(form) }}>
                    		<div class="row">
                                <div class="form-group col-md-8">
                                    <label class="required">Customer</label>
                                    <input type="text" data-id="appbundle_appointment_customer"  name="select_customer[customer]" data-url="{{ path('customer_get') }}" class="form-control autocomplete" value="{{ form.vars.data.lastname|default('') }}">
                                </div>
                                <div class="form-group col-md-2">
                                    {{ form_label(form.appointmentDate) }}
                                    {{ form_widget(form.appointmentDate, { 'attr': {'tabindex' : 1, 'value': date|date('Y-m-d'), 'class':'form-control input-sm'  } }) }}
                                    {{ form_errors(form.appointmentDate) }}
                                </div>
                                <div class="form-group col-md-2">
                                    <label for="appbundle_appointment_appointmentDate" class="required">Hora</label>
                                    <br>
                                    <span id="appointmentHour">{{ time|date('H:i:s') }}</span>
                                </div>
                            </div>
                            
                            <div class="row">
                                <br>
                                <div class="boton-add"></div>
                                <hr>
                                {{ form_rest(form) }}
                            </div>
                            <div class="row">
                                <br>
                            </div>
	                    	<div class="row">
                                <button type="submit" class="btn btn-success">
                                  Enviar
                              </button>
    	                    	{# {{ form_widget(form.submit, {'attr': {'class': 'btn btn-default'}}) }} #}
    	                    	<a href="{{ path('appointment') }}" class="btn btn-default">Back to the list</a>
                            </div>
                            
                    	</form>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        $(function(){
            $('.autocomplete').each(function(i, el) {
                console.log('.autocomplete');
                var $this = $(el);
                $this.autocomplete({
                    source: $this.data('url'),
                    minLength: 1,
                    select: function( event, ui ) {
                        $('#' + $this.data('id')).val(ui.item.id);
                        event.preventDefault();
                        this.value = ui.item.label+ ' ' +ui.item.lastName;
                    }
                });
                $this.autocomplete( "instance" )._renderItem = function( ul, item ) {
                  return $( "<li>" )
                    .append( "<a>" + item.label + " " + item.lastName + "</a>" )
                    .appendTo( ul );
                };
            });
           
        });
    </script>
    
    <script>

        function addTagForm(collectionHolder) {
            // Get the data-prototype explained earlier
            var prototype = collectionHolder.data('prototype');

            // get the new index
            var index = collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a schedule" link li
            var $newFormLi = $('<div></div>').append(newForm);
            collectionHolder.append($newFormLi);
        }

        // Get the div that holds the collection of addresses
        var collectionHolder = $('div.schedules');

        // setup an "add a schedule" link
        var $newLinkLi = $('<a href="#" id="botton-add" class="btn btn-xs btn-info add_schedule_link"><i class="glyphicon glyphicon-plus glyphicon-white"></i> Añadir un schedule</a>');

        $(function(){

            // add the "add a schedule" anchor and li to the addresses div
            //collectionHolder.parent().append($newLinkLi);
            $(".boton-add").append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            collectionHolder.data('index', collectionHolder.find(':input').length);

            $newLinkLi.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new form (see next code block)
                addTagForm(collectionHolder);
            });

            $(document).on('click', '.close', function(){
                $(this).closest('.schedule').fadeOut(500, function() {
                    $(this).remove();
                });
            });
        });
    </script>
    <script>
        function getIdLine(str) {
            var id = str.substring(32,34);
            var stringLength = id.length;
            var lastChar = id.charAt(stringLength - 1);
            if (lastChar === '_') {
                id = id.substring(0, stringLength-1);
            }
            return id;
        }

        function calculateHour(time, id) {
            var rest = time / 15;
            var div = time / 15;

            var ls =  document.getElementById("appointmentHour").innerHTML;
            console.log('time:'+time);
            console.log('mod:'+rest);
            console.log('div:'+div);
            num0 = div.toFixed(0); 
            console.log("Parte entera: "+num0);

            var date = '28/05/2011 '+ls;
            console.log('date:'+date);

            if (id == 0) {
                var lastHour = document.getElementById("appointmentHour").innerHTML;
                console.log(lastHour);
                document.getElementById("appbundle_appointment_schedules_"+id+"_startingHour").value = lastHour;
            } else {
                ids = id - 1;
                var lastHour = document.getElementById("appbundle_appointment_schedules_"+ids+"_finishHour").value;
                // la hora de inicio es = a la hora de fin del servicio anterior
                document.getElementById("appbundle_appointment_schedules_"+id+"_startingHour").value = lastHour;    
            }
            document.getElementById("appbundle_appointment_schedules_"+id+"_finishHour").value = '12:12';
        }

        function addRow() {
            // este recoge el autocomplete de service y el de rooms
            $('.autocompleteservice').each(function(i, el) {
                var $this = $(el);
                $this.autocomplete({
                    source: $this.data('url'),
                    minLength: 1,
                    select: function( event, ui ) {
                        $('#' + $this.data('id')).val(ui.item.id);
                        //var id = getIdLine($this.data('id'));
                        //$hour = calculateHour(ui.item.time, id);
                    }
                });
                
            });

            // este recoge el autocomplete de service y el de rooms
            $('.autocompleteroom').each(function(i, el) {
                var $this = $(el);
                $this.autocomplete({
                    source: $this.data('url'),
                    minLength: 1,
                    select: function( event, ui ) {
                        $('#' + $this.data('id')).val(ui.item.id);
                    }
                });
                
            });

            // este recoge el autocomplete de staff
            $('.autocompletestaff').each(function(i, el) {
                var $this = $(el);
                $this.autocomplete({
                    source: $this.data('url'),
                    minLength: 1,
                    select: function( event, ui ) {
                        $('#' + $this.data('id')).val(ui.item.id);
                        event.preventDefault();
                        this.value = ui.item.label+ ' ' +ui.item.lastName;
                    }
                });
                $this.autocomplete( "instance" )._renderItem = function( ul, item ) {
                  return $( "<li>" )
                    .append( "<a>" + item.label + " " + item.lastName + "</a>" )
                    .appendTo( ul );
                };
            });
        }

        function cargar_eventos() {
            var elemento=document.getElementById('botton-add');
            elemento.addEventListener('click', addRow, false);
            
        }
        window.addEventListener('load', cargar_eventos, false);
    </script>
{% endblock %}
