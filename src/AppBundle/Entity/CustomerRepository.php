<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends EntityRepository
{
	public function findByTerm($term)
    {
        $query = $this->getEntityManager()->createQuery("
            SELECT customer.id as id,
                   customer.name as label,
                   customer.lastName as lastName,
                   customer.address as adress
            FROM AppBundle:Customer customer
            WHERE customer.name LIKE :term
            OR customer.lastName LIKE :term
        ")->setParameter('term', '%' . $term . '%');

        return $query->getArrayResult();
    }

    public function findCustomer($customer_id)
    {
        $query = $this->getEntityManager()->createQuery("
            SELECT customer
            FROM AppBundle:Customer customer
            WHERE customer.id = :customer_id
        ")->setParameter('customer_id', $customer_id);

        return $query->getSingleResult();
    }

    public function getSchedules($customer_id)
    {
        $query = $this->getEntityManager()->createQuery("
            SELECT s.id as id,
                   s.scheduleDate as scheduleDate,
                   s.startingHour as startingHour,
                   s.finishHour as finishHour,
                   s.price as price,
                   s.discount as discount,
                   r.name as room,
                   sv.name as service,
                   a.id as appointment,
                   c.id as customerId,
                   c.name as name,
                   c.lastName as lastName
            FROM AppBundle:Schedule s
            JOIN s.room r
            JOIN s.service sv
            JOIN s.appointment a
            JOIN a.customer c
            WHERE a.customer = :customer_id
            ORDER BY s.id
            ")->setParameter('customer_id', $customer_id);

        return $query->getResult();

        //return $customers;
    }

    public function getSchedulesGroupByServices($customer_id)
    {
        $query = $this->getEntityManager()->createQuery("
            SELECT s.id as id,
                   sv.name as service,
                   count(sv.id) as counter,
                   a.id as appointment,
                   c.id as customerId,
                   c.name as name,
                   c.lastName as lastName
            FROM AppBundle:Schedule s
            JOIN s.room r
            JOIN s.service sv
            JOIN s.appointment a
            JOIN a.customer c
            WHERE a.customer = :customer_id
            GROUP BY s.service
            ORDER BY counter DESC
            ")->setParameter('customer_id', $customer_id);

        return $query->getResult();

        //return $customers;
    }
}
